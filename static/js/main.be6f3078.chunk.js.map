{"version":3,"sources":["components/Card/index.js","components/Nav/index.js","components/Video/index.js","pages/Websites/index.js","pages/PhoneApps/index.js","pages/About/index.js","pages/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","style","opacity","border","src","picture","alt","name","onClick","clips","NavBar","this","bgcolor","backgroundColor","color","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","React","Component","VideoTron","buttons","tech","preview","maxWidth","width","ref","myRef","loop","Websites","hero","useRef","webCards","webCardText","sampleWebsite","useState","webProjects","projects","videoPath","setVideoPath","videoTitle","setVideoTitle","visit","setVisit","viewCode","setViewCode","feature","setFeature","darkMode","setDarkMode","previews","setPreviews","useLayoutEffect","projectCard1","current","childNodes","projectCard2","projectCard3","document","body","backgroundDark","backgroundLight","styles","cardRow","display","flexWrap","flexDirection","justifyContent","alignItems","projectText","visibility","firstProject","transition","transform","onmouseover","onmouseout","secondProject","thirdProject","autoScroll","window","scrollTo","top","offsetTop","left","behavior","setTimeout","position","map","card","index","key","newVideo","clip","newFeature","features","newVideoTitle","newVisit","newViewCode","play","Video","feat","fontSize","href","target","role","PhoneApps","About","Contact","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be6f3078.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Card = props => {\n    // might have to change \"border none\" but this gives it a clean look\n    return (  \n    <div className=\"card projectCard mb-3\" style={{opacity:\"0\", border:\"none\"}}>\n        <img \n        src={props.picture} \n        className=\"card-img-top\" \n        alt={props.name}\n        onClick={props.clips}\n        />\n    </div>  \n    )\n}\n\nexport default Card\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport './styling.css'\n\nexport default class NavBar extends React.Component {  \n  render() {\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-light nav-style fixed-top\" \n      style={this.props.bgcolor ? {backgroundColor: \"black\"} : {backgroundColor: \"white\"}}\n      >\n        <div className='container'>\n          <a className=\"navbar-brand\"\n          style={this.props.bgcolor ? {color: \"gray\"} : {color: \"black\"}}>    \n          Ronald Glover\n          </a>\n          <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-collapse\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n          </button>\n            <div className=\"collapse navbar-collapse flex-row-reverse\">\n              <ul className=\"navbar-nav\">\n                <li className=\"nav-item\">\n                <Link to=\"/\" className=\"nav-link\"\n                  style={this.props.bgcolor ? {color: \"gray\"} : {color: \"black\"}}>    \n                  Web Apps\n                </Link>\n                </li>\n                <li className=\"nav-item\">\n                <Link to=\"/PhoneApps\" className=\"nav-link\"\n                  style={this.props.bgcolor ? {color: \"gray\"} : {color: \"black\"}}>    \n                  Phone Apps\n                </Link>\n                </li>\n                <li className=\"nav-item\">\n                <Link to=\"/About\" className=\"nav-link\"\n                  style={this.props.bgcolor ? {color: \"gray\"} : {color: \"black\"}}>    \n                  About\n                </Link>\n                </li>\n                <li className=\"nav-item\">\n                <Link to=\"/Contact\" className=\"nav-link\"\n                  style={this.props.bgcolor ? {color: \"gray\"} : {color: \"black\"}}>    \n                  Contact\n                </Link>\n                </li>\n              </ul>\n            </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\n","import React from 'react'\nimport './styling.css'\n\nconst VideoTron = props => {  \n\n    return (\n        <div className=\"videoContainer\">\n            <div className=\"banner\">\n            <h2 className=\"videoTitle\">{props.name}</h2>\n            <div className=\"visitProject\">\n                {props.buttons}\n            </div>\n            <ul>\n                {props.tech}\n            </ul>\n            </div>\n            <div className=\"myGradient\"></div>\n            <video \n            src={props.preview} \n            style={{maxWidth:\"100%\", width:\"70%\"}}\n            ref={props.myRef}\n            loop \n            >\n            </video>\n        </div>\n    )\n}\n\nexport default VideoTron","import React, {useRef, useState, useLayoutEffect} from 'react'\nimport webProjects from './webProjects.json'\nimport Card from '../../components/Card'\nimport Nav from '../../components/Nav'\nimport VideoTron from '../../components/Video'\nimport './styles.css'\n\nconst Websites = () => {\n\n    const hero = useRef(null)\n    const webCards = useRef(null)\n    const webCardText = useRef(null)\n    const sampleWebsite = useRef(null)\n    const [projects] = useState(webProjects)\n    const [videoPath, setVideoPath] = useState(null)\n    const [videoTitle, setVideoTitle] = useState(null)\n    const [visit, setVisit] = useState(null)\n    const [viewCode, setViewCode] = useState(null)\n    const [feature, setFeature] = useState(null)\n    const [darkMode, setDarkMode] = useState(false)\n    const [previews, setPreviews] = useState(false)\n    \n    useLayoutEffect(()=> darkMode ? backgroundDark() : backgroundLight())\n\n    const styles = {\n        cardRow: {\n           display: 'none',\n           flexWrap: 'wrap',\n           flexDirection: 'row',\n           justifyContent: 'space-evenly',\n        },\n        darkMode: {\n           display: 'flex',\n           flexDirection: 'row',\n           alignItems: 'baseline'\n        },\n        projectText: {\n           visibility: 'hidden'\n        }\n    }\n\n    // This function raises and hides the hero image\n    function showProjects() {\n        showCards()\n        projectText()\n        hero.current.style.opacity = \"0\"\n        webCards.current.style.display = \"flex\"\n        hero.current.style.transition = \"ease 1s\"\n        hero.current.style.transform = \"translate(0px, -300px)\"\n    }\n    \n    // This function causes animation effect            \n    function showCards() {\n        setTimeout(firstProject, 300)\n        setTimeout(secondProject, 500)\n        setTimeout(thirdProject, 700)\n    }\n\n    function projectText() {\n        webCardText.current.style.visibility = \"visible\"\n        webCardText.current.style.transition = \"ease 1.5s\"\n        webCardText.current.style.transform = \"translate(0px, -600px)\"\n    }\n\n    // This function raises and shows the first web project \n    function firstProject(){\n        const projectCard1 = webCards.current.childNodes[0]\n        projectCard1.style.opacity = \"1\"\n        projectCard1.style.transition = \"ease 1s\"\n        projectCard1.style.transform = \"translate(0px, -450px)\"\n        projectCard1.onmouseover = ()=> projectCard1.style.width = \"35rem\"\n        projectCard1.onmouseout = ()=> projectCard1.style.width = \"25rem\" \n    \n    }\n    // This function raises and shows the first web project \n    function secondProject(){\n        const projectCard2 = webCards.current.childNodes[1]\n        projectCard2.style.opacity = \"1\"\n        projectCard2.style.transition = \"ease 1s\"\n        projectCard2.style.transform = \"translate(0px, -450px)\"\n        projectCard2.onmouseover = ()=> projectCard2.style.width = \"35rem\"\n        projectCard2.onmouseout = ()=> projectCard2.style.width = \"25rem\"\n    }\n    // This function raises and shows the first web project \n    function thirdProject(){\n        const projectCard3 = webCards.current.childNodes[2]\n        projectCard3.style.opacity = \"1\"\n        projectCard3.style.transition = \"ease 1s\"\n        projectCard3.style.transform = \"translate(0px, -450px)\"\n        projectCard3.onmouseover = ()=> projectCard3.style.width = \"35rem\"\n        projectCard3.onmouseout = ()=> projectCard3.style.width = \"25rem\"\n    }\n\n    function backgroundDark(){  \n        const projectCard1 = webCards.current.childNodes[0]\n        const projectCard2 = webCards.current.childNodes[1]\n        const projectCard3 = webCards.current.childNodes[2]\n        document.body.style.backgroundColor = \"black\"\n        projectCard1.style.backgroundColor = \"black\"\n        projectCard2.style.backgroundColor = \"black\"\n        projectCard3.style.backgroundColor = \"black\"\n    }\n    function backgroundLight(){\n        const projectCard1 = webCards.current.childNodes[0]\n        const projectCard2 = webCards.current.childNodes[1]\n        const projectCard3 = webCards.current.childNodes[2]\n        document.body.style.backgroundColor = \"white\"\n        projectCard1.style.backgroundColor = \"white\"\n        projectCard2.style.backgroundColor = \"white\"\n        projectCard3.style.backgroundColor = \"white\"\n    }\n    function enableDarkMode(){\n        setDarkMode(!darkMode)\n    }\n    function autoScroll() {\n        const scrollToRef = (ref) => window.scrollTo({top:ref.current.offsetTop / 1.5, left:0, behavior: 'smooth'})\n        scrollToRef(webCards) \n    }\n    function setNewVideo(newVideo, newFeature, newVideoTitle, newVisit, newViewCode){\n        setPreviews(true)\n        setVisit(newVisit)\n        setViewCode(newViewCode)\n        setFeature(newFeature)\n        setVideoPath(newVideo)\n        setVideoTitle(newVideoTitle)\n        setTimeout(autoScroll, 300) \n        setTimeout(()=>sampleWebsite.current.play(), 500) \n    }\n    return(\n        <>\n        <Nav \n        bgcolor = {darkMode}\n        />\n        {/* <div className=\"jumbotron jumbotron-fluid mb-0\"> */}\n        <div ref={hero} className=\"container pt-5\">\n            <img src=\"/images/webAppImg02.png\" alt='code' className=\"img-fluid\"/>\n            <h2 className='jumbo-text text-center'>All Web Apps below are full stack</h2>\n            <p className='text-center info-text'>Click Below to see Projects</p>\n            <div className=\"d-flex justify-content-center\">\n            <button onClick={showProjects} type=\"button\" className=\"btn btn-primary btn-lg \n            rounded-circle start-btn d-flex justify-content-center\">\n                <i className=\"fas fa-desktop fa-2x \"></i>\n            </button>\n            </div>\n        </div>\n        {/* </div> */}\n\n        <div ref={webCardText} style={styles.projectText} className=\"container pt-5\">\n            <h2 className='jumbo-text'>Selected Projects</h2>\n            <p className='info-text'>Click on cards to see a video of the project</p>\n            <div style={styles.darkMode}>\n            <button onClick={enableDarkMode} style={{position: 'relative'}} type=\"button\" className=\"moon-btn\n            rounded-circle dark-btn d-flex justify-content-center\">\n                <i className={ darkMode ? 'fas fa-sun' : 'fas fa-moon' }></i>\n            </button>\n            <p className='darkmode-text ml-3'>{darkMode ? 'Enable light mode' : 'Enable dark mode'}</p>\n            </div>\n        </div>\n\n        {/* \n            OnClick on the card should also turn off all effects on cards and should replace \n            it with an border on the active card and a gradiant to see text and buttons for \n            github and the actual site. \n        */}\n\n        <div ref={webCards} style={styles.cardRow}> \n            {projects.map((card, index) => (\n                <Card \n                key = { index }\n                name = {card.name}\n                picture = {card.picture}\n                clips = {\n                    ()=> setNewVideo(card.clip, card.features, card.name, card.visit, card.viewCode)\n                }\n                />\n            ))}\n        </div>\n\n            { previews ? \n\n            <VideoTron \n                name = {videoTitle}\n                myRef = {sampleWebsite}\n                preview = {videoPath}\n                tech = {feature.map((feat, index) => <li key={index} style={{fontSize:\"2vw\"}}>{feat}</li>)}\n                buttons = {\n                    <>\n                    <a href={visit} target=\"_blank\" role=\"button\" className=\"btn btn-primary btn-lg mx-2\" style={{fontSize:\"1vw\"}}>\n                        <i className=\"fas fa-search\"></i> Visit Site\n                    </a>\n                    <a href={viewCode} target=\"_blank\" role=\"button\" className=\"btn btn-secondary btn-lg mx-2\" style={{fontSize:\"1vw\"}}>\n                        <i className=\"fas fa-laptop-code\"></i> View Code\n                    </a>\n                    </>\n                }\n            /> : null}\n\n        </>\n    )\n}\n\nexport default Websites\n","import React from 'react'\nimport './styles.css'\nconst PhoneApps = () => {\n\n\nreturn(\n    <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <p className=\"main-text jumbo-text-phone d-flex justify-content-center\">Phone Apps</p>\n          <p className=\"lead d-flex justify-content-center\">Text info will be here</p>\n        </div>\n    </div>\n)\n}\nexport default PhoneApps","import React from 'react'\n\nconst About = () => {\n\n\n    return(\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n              <p className=\"main-text jumbo-text-phone d-flex justify-content-center\">About Me</p>\n              <p className=\"lead d-flex justify-content-center\">Text info will be here</p>\n            </div>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\n\nconst Contact = () => {\n\n\n    return(\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n              <p className=\"main-text jumbo-text-phone d-flex justify-content-center\">Contact Me</p>\n              <p className=\"lead d-flex justify-content-center\">Text info will be here</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Contact","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Websites from './pages/Websites'\nimport PhoneApps from './pages/PhoneApps'\nimport About from './pages/About'\nimport Contact from './pages/Contact'\nimport Nav from './components/Nav'\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Websites} />\n          <Route exact path=\"/PhoneApps\" component={PhoneApps} />\n          <Route exact path=\"/About\" component={About} />\n          <Route exact path=\"/Contact\" component={Contact} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}